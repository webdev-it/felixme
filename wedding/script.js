// –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã –∏ —É–ª—É—á—à–µ–Ω–∏–µ UX
document.addEventListener('DOMContentLoaded', function() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–æ–Ω–æ–≤–æ–π –º—É–∑—ã–∫–∏
    initBackgroundMusic();
    
    const form = document.getElementById('weddingForm');
    const loading = document.querySelector('.loading');
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
    const inputs = form.querySelectorAll('input[required], select[required], textarea[required]');
    inputs.forEach(input => {
        input.addEventListener('blur', validateField);
        input.addEventListener('input', clearError);
    });

    // –§—É–Ω–∫—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–æ–ª—è
    function validateField(event) {
        const field = event.target;
        const errorElement = field.parentNode.querySelector('.error-message');
        
        if (!field.value.trim() && field.hasAttribute('required')) {
            showError(field, errorElement, '–≠—Ç–æ –ø–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è');
            return false;
        }
        
        hideError(field, errorElement);
        return true;
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É
    function showError(field, errorElement, message) {
        field.style.borderColor = 'var(--error-color)';
        if (errorElement) {
            errorElement.textContent = message;
            errorElement.style.display = 'block';
        }
    }

    // –°–∫—Ä—ã—Ç—å –æ—à–∏–±–∫—É
    function hideError(field, errorElement) {
        field.style.borderColor = '#e0e0e0';
        if (errorElement) {
            errorElement.style.display = 'none';
        }
    }

    // –û—á–∏—Å—Ç–∏—Ç—å –æ—à–∏–±–∫—É –ø—Ä–∏ –≤–≤–æ–¥–µ
    function clearError(event) {
        const field = event.target;
        const errorElement = field.parentNode.querySelector('.error-message');
        hideError(field, errorElement);
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã —á–µ—Ä–µ–∑ –Ω–æ–≤—ã–π API
    form.addEventListener('submit', function(event) {
        event.preventDefault();
        
        // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Å–µ–π —Ñ–æ—Ä–º—ã
        let isValid = true;
        inputs.forEach(input => {
            if (!validateField({ target: input })) {
                isValid = false;
            }
        });

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–¥–∏–æ-–∫–Ω–æ–ø–æ–∫
        const attendanceRadios = form.querySelectorAll('input[name="attendance"]');
        const attendanceSelected = Array.from(attendanceRadios).some(radio => radio.checked);
        if (!attendanceSelected) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ, –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –ª–∏ –≤—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –Ω–∞ —Å–≤–∞–¥—å–±–µ');
            isValid = false;
        }

        if (!isValid) {
            return;
        }

        // –í—ã–∑—ã–≤–∞–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é API –æ—Ç–ø—Ä–∞–≤–∫–∏
        submitForm(event);
    });

    // –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0)';
            }
        });
    });

    document.querySelectorAll('.form-section').forEach(section => {
        section.style.opacity = '0';
        section.style.transform = 'translateY(20px)';
        section.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
        observer.observe(section);
    });

    // –ü–æ–¥—Å—á–µ—Ç —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è textarea
    const textareas = document.querySelectorAll('textarea[maxlength]');
    textareas.forEach(textarea => {
        const counter = document.createElement('div');
        counter.className = 'char-counter';
        counter.style.textAlign = 'right';
        counter.style.fontSize = '0.9rem';
        counter.style.color = 'var(--accent-color)';
        counter.style.marginTop = '5px';
        
        const maxLength = textarea.getAttribute('maxlength');
        counter.textContent = `0/${maxLength}`;
        
        textarea.parentNode.appendChild(counter);
        
        textarea.addEventListener('input', function() {
            const length = this.value.length;
            counter.textContent = `${length}/${maxLength}`;
            
            if (length > maxLength * 0.9) {
                counter.style.color = 'var(--error-color)';
            } else {
                counter.style.color = 'var(--accent-color)';
            }
        });
    });
});

// –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–æ–Ω–æ–≤–æ–π –º—É–∑—ã–∫–æ–π
let musicInitialized = false;
let backgroundMusic = null;
let musicToggleBtn = null;

function initBackgroundMusic() {
    backgroundMusic = document.getElementById('backgroundMusic');
    musicToggleBtn = document.getElementById('musicToggle');
    
    if (!backgroundMusic || !musicToggleBtn) return;
    
    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–π –≥—Ä–æ–º–∫–æ—Å—Ç–∏
    backgroundMusic.volume = 0.3;
    
    // –ü–æ–ø—ã—Ç–∫–∞ –∞–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    startMusicWithUserInteraction();
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –∞—É–¥–∏–æ
    backgroundMusic.addEventListener('error', function() {
        console.log('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ–Ω–æ–≤–æ–π –º—É–∑—ã–∫–∏');
        musicToggleBtn.style.display = 'none';
    });
    
    // –°–æ–±—ã—Ç–∏—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
    backgroundMusic.addEventListener('play', function() {
        musicToggleBtn.classList.add('playing');
        musicToggleBtn.classList.remove('muted');
        musicToggleBtn.innerHTML = 'üéµ';
        musicToggleBtn.title = '–í—ã–∫–ª—é—á–∏—Ç—å –º—É–∑—ã–∫—É';
    });
    
    backgroundMusic.addEventListener('pause', function() {
        musicToggleBtn.classList.remove('playing');
        musicToggleBtn.classList.add('muted');
        musicToggleBtn.innerHTML = 'üîá';
        musicToggleBtn.title = '–í–∫–ª—é—á–∏—Ç—å –º—É–∑—ã–∫—É';
    });
}

function startMusicWithUserInteraction() {
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ø—ã—Ç–∫–∏ –∞–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
    function tryAutoplay() {
        if (backgroundMusic && !musicInitialized) {
            backgroundMusic.play().then(() => {
                musicInitialized = true;
                console.log('–§–æ–Ω–æ–≤–∞—è –º—É–∑—ã–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞');
            }).catch(() => {
                // –ê–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ, –∂–¥–µ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                document.addEventListener('click', enableMusicOnFirstClick, { once: true });
                document.addEventListener('keydown', enableMusicOnFirstClick, { once: true });
                console.log('–ê–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ, –æ–∂–∏–¥–∞–Ω–∏–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
            });
        }
    }
    
    // –ó–∞–ø—É—Å–∫ –º—É–∑—ã–∫–∏ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    function enableMusicOnFirstClick() {
        if (backgroundMusic && !musicInitialized) {
            backgroundMusic.play().then(() => {
                musicInitialized = true;
                console.log('–§–æ–Ω–æ–≤–∞—è –º—É–∑—ã–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞ –ø–æ—Å–ª–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
            }).catch(error => {
                console.log('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –º—É–∑—ã–∫—É:', error);
            });
        }
    }
    
    // –ü–æ–ø—ã—Ç–∫–∞ –∞–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    setTimeout(tryAutoplay, 1000);
}

function toggleMusic() {
    if (!backgroundMusic) return;
    
    if (backgroundMusic.paused) {
        backgroundMusic.play().then(() => {
            console.log('–ú—É–∑—ã–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
        }).catch(error => {
            console.log('–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:', error);
        });
    } else {
        backgroundMusic.pause();
        console.log('–ú—É–∑—ã–∫–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
    }
}

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º—É–∑—ã–∫–æ–π —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
document.addEventListener('keydown', function(event) {
    // –ü—Ä–æ–±–µ–ª –∏–ª–∏ M –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º—É–∑—ã–∫–∏
    if ((event.code === 'Space' || event.code === 'KeyM') && !event.target.matches('input, textarea, select')) {
        event.preventDefault();
        toggleMusic();
    }
});

// API Configuration
const API_BASE_URL = window.location.hostname === 'localhost' 
    ? 'http://localhost:3000' 
    : 'https://wedding-invitation-backend-lj0d.onrender.com'; // –í–∞—à —Ä–µ–∞–ª—å–Ω—ã–π Render backend

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã —á–µ—Ä–µ–∑ API
async function submitForm(event) {
    event.preventDefault();
    
    const form = event.target;
    const formData = new FormData(form);
    
    // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏
    const data = {
        name: formData.get('name'),
        attendance: formData.get('attendance'),
        wishes: formData.get('wishes') || ''
    };
    
    // –ù–∞—Ö–æ–¥–∏–º –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏
    const submitBtn = form.querySelector('button[type="submit"]') || 
                     form.querySelector('.submit-btn') ||
                     document.querySelector('#submitBtn');
    
    if (submitBtn) {
        const originalText = submitBtn.textContent;
        
        try {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
            submitBtn.disabled = true;
            submitBtn.textContent = '‚è≥ –û—Ç–ø—Ä–∞–≤–∫–∞...';
            submitBtn.style.opacity = '0.7';
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ API
            const response = await fetch(`${API_BASE_URL}/api/submit-form`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json'
                },
                body: JSON.stringify(data)
            });
            
            const result = await response.json();
            
            if (result.success) {
                // –£—Å–ø–µ—à–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞
                console.log('‚úÖ –§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ:', result);
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—Ö
                submitBtn.textContent = '‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!';
                submitBtn.style.background = 'linear-gradient(135deg, #28a745, #20c997)';
                
                // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
                setTimeout(() => {
                    window.location.href = 'success.html';
                }, 1000);
                
            } else {
                // –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏–ª–∏ —Å–µ—Ä–≤–µ—Ä–∞
                console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', result);
                throw new Error(result.message || '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã');
            }
            
        } catch (error) {
            console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
            submitBtn.textContent = '‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏';
            submitBtn.style.background = 'linear-gradient(135deg, #dc3545, #c82333)';
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            alert(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã:\n\n${error.message}\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞–º.`);
            
            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
            setTimeout(() => {
                submitBtn.disabled = false;
                submitBtn.textContent = originalText;
                submitBtn.style.opacity = '1';
                submitBtn.style.background = '';
            }, 3000);
        }
    } else {
        console.error('‚ùå –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }
}